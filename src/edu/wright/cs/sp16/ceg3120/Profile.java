/*
 * Copyright (C) 2016
 * 
 * 
 * 
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

package edu.wright.cs.sp16.ceg3120;


import javax.swing.*;
import java.awt.*;

/**
 *
 * @author iZezoh.
 */
public class Profile extends JFrame {

/**
 * Creates new form Profile.
 */
	public Profile() {
		super("Connection");
		setResizable(false);
		setLocationRelativeTo(null);
		initComponents();
	}

/**
 * This method is called from within the constructor to initialize the form.
 * WARNING: Do NOT modify this code. The content of this method is always
 * regenerated by the Form Editor.
 */
	@SuppressWarnings("unchecked")
	// <editor-fold default state="collapsed" disc="Generated Code">                          
	private void initComponents() {
	
		otherConnection = new JTabbedPane();
		jPanel1 = new JPanel();
		jPanel2 = new JPanel();
		defaultFavorite = new JLabel();
		defaultView = new JLabel();
		defaultEncoding = new JLabel();
		tableViews = new JLabel();
		rememberLast = new JLabel();
		choice1 = new Choice();
		choice2 = new Choice();
		choice3 = new Choice();
		startupConnect = new JCheckBox();
		useMonospaced = new JCheckBox();
		gridLines = new JCheckBox();
		pxQueries = new JComboBox();
		queries = new JLabel();
		jMenuBar1 = new JMenuBar();
		fileMenu = new JMenu();
		editMenu = new JMenu();
		windowMenu = new JMenu();
		helpMenu = new JMenu();
		
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		
		GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(
				jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGap(0, 494, Short.MAX_VALUE)
		);
		jPanel1Layout.setVerticalGroup(
				jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGap(0, 269, Short.MAX_VALUE)
		);
		
		otherConnection.addTab("Connection 1", jPanel1);
		
		defaultFavorite.setText("Default Favorite:");
		
		defaultView.setText("Default View:");
		
		defaultEncoding.setText("Default Encoding:");
		
		tableViews.setText("Table Views:");
		
		rememberLast.setText("Remember Last:");
		
		startupConnect.setFont(new Font("Lucida Grande", 0, 11)); // NOI18N
		startupConnect.setText("Connect to Default on Startup");
		
		useMonospaced.setFont(new Font("Lucida Grande", 0, 11)); // NOI18N
		useMonospaced.setText("Use monospaced fonts");
		
		gridLines.setFont(new Font("Lucida Grande", 0, 11)); // NOI18N
		gridLines.setText("Display vertical grid lines");
		
		pxQueries.setModel(new DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
		
		queries.setText("queries");

		GroupLayout jPanel2Layout = new GroupLayout(jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(
				jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup()
				.addContainerGap()
				.addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addComponent(defaultFavorite)
				.addComponent(defaultEncoding)
				.addComponent(defaultView)
				.addComponent(tableViews)
				.addComponent(rememberLast))
				.addGap(59, 59, 59)
				.addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup()
				.addComponent(pxQueries, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
				.addGap(18, 18, 18)
				.addComponent(queries))
				.addComponent(useMonospaced)
				.addComponent(choice3, GroupLayout.PREFERRED_SIZE, 166, GroupLayout.PREFERRED_SIZE)
				.addComponent(choice2, GroupLayout.PREFERRED_SIZE, 166, GroupLayout.PREFERRED_SIZE)
				.addComponent(choice1, GroupLayout.PREFERRED_SIZE, 166, GroupLayout.PREFERRED_SIZE)
				.addComponent(startupConnect)
				.addComponent(gridLines))
				.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		jPanel2Layout.setVerticalGroup(
				jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup()
				.addGap(20, 20, 20)
				.addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addComponent(defaultFavorite)
				.addComponent(choice1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
				.addGap(2, 2, 2)
				.addComponent(startupConnect)
				.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
				.addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addComponent(defaultView)
				.addComponent(choice3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
				.addGap(18, 18, 18)
				.addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addComponent(defaultEncoding)
				.addComponent(choice2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
				.addGap(18, 18, 18)
				.addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup()
				.addComponent(useMonospaced)
				.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
				.addComponent(gridLines))
				.addComponent(tableViews))
				.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
				.addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addComponent(rememberLast)
				.addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
				.addComponent(pxQueries, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
				.addComponent(queries)))
				.addContainerGap(33, Short.MAX_VALUE))
		);

		otherConnection.addTab("Other Connection", jPanel2);
		
		fileMenu.setText("File");
		jMenuBar1.add(fileMenu);
		
		editMenu.setText("Edit");
		jMenuBar1.add(editMenu);
		
		windowMenu.setText("Window");
		jMenuBar1.add(windowMenu);
		
		helpMenu.setText("Help");
		jMenuBar1.add(helpMenu);
		
		setJMenuBar(jMenuBar1);

		GroupLayout layout = new GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addComponent(otherConnection)
		);
		layout.setVerticalGroup(
				layout.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
				.addComponent(otherConnection)
				.addContainerGap())
		);

		setVisible(true);
		pack();
		}// </editor-fold>                        

/**
 * @param args the command line arguments.
 */
	public static void main(String args[]) {
/* Set the Nimbus look and feel */
//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
 */
		try {
			for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
//</editor-fold>

/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new Profile().setVisible(true);
			}
		});
	}

// Variables declaration - do not modify                     
	private Choice choice1;
	private Choice choice2;
	private Choice choice3;
	private JLabel defaultEncoding;
	private JLabel defaultFavorite;
	private JLabel defaultView;
	private JMenu editMenu;
	private JMenu fileMenu;
	private JCheckBox gridLines;
	private JMenu helpMenu;
	private JMenuBar jMenuBar1;
	private JPanel jPanel1;
	private JPanel jPanel2;
	private JTabbedPane otherConnection;
	private JComboBox pxQueries;
	private JLabel queries;
	private JLabel rememberLast;
	private JCheckBox startupConnect;
	private JLabel tableViews;
	private JCheckBox useMonospaced;
	private JMenu windowMenu;
// End of variables declaration                   
}
